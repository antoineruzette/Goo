[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[project]
name = "goo"
dynamic = ["version"]
description = "Goo is a library to simulate 3D biological cells, tissues and embryos in Blender."
readme = "README.md"
requires-python = ">=3.10"
license = { text = "BSD-2-Clause" }
authors = [
    { name = "Antoine A. Ruzette" },
    { name = "Sean Megason", email = "sean_megason@hms.harvard.edu" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]

# Core dependencies that are common to all Blender versions
dependencies = [
    "typing_extensions>=4.12.2",
    "h5py>=3.12.1",
    "tifffile>=2025.3.13",
    "xarray>=2025.3.0",
    "antimony>=2.14.0",
    "libroadrunner==2.7.0",
]

[project.optional-dependencies]
# Blender 4.0 specific dependencies (Python 3.10)
blender40 = [
    "numpy==1.26.4",  # Last version supporting Python 3.10
    "scipy==1.14.0",  # Last version supporting Python 3.10
    "fake-bpy-module==20240524"
]

# Blender 4.5 specific dependencies (Python 3.11)
blender45 = [
    "numpy>=1.26.4",  # Latest version for Python 3.11
    "scipy>=1.14.0",  # Latest version for Python 3.11
    "fake-bpy-module==20240524"
]

# Development tools
dev = [
    "pytest==8.3.4",
    "pytest-cov>=6.0.0",
    "Sphinx==7.3.7",
    "sphinx_copybutton==0.5.2",
    "furo==2024.8.6",
    "sphinxcontrib.video==0.3.1",
    "mypy",
    "ruff",
    "pre-commit",
    "hatch",
    "uv",
]

# Documentation tools
docs = [
    "Sphinx==7.3.7",
    "sphinx_copybutton==0.5.2",
    "furo==2024.8.6",
    "sphinxcontrib.video==0.3.1"
]

[project.urls]
homepage = "https://github.com/MegasonLab/Goo"
repository = "https://github.com/MegasonLab/Goo"

[tool.uv.sources]
goo = { workspace = true }

[tool.ruff]
line-length = 88
src = ["src"]

[tool.ruff.lint]
select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "I",    # isort
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "RUF",  # ruff-specific rules
]

[tool.mypy]
files = "src/**/"
strict = true
show_error_codes = true
pretty = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore:unclosed transport:ResourceWarning",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "raise NotImplementedError",
    "pass",
]